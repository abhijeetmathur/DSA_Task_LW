import random
import time

def bubble_sort(arr):
    """Bubble Sort algorithm."""
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]  # Swap

def quick_sort(arr):
    """Quick Sort algorithm."""
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]  # Choose the middle element as pivot
    left = [x for x in arr if x < pivot]  # Elements less than pivot
    middle = [x for x in arr if x == pivot]  # Elements equal to pivot
    right = [x for x in arr if x > pivot]  # Elements greater than pivot
    return quick_sort(left) + middle + quick_sort(right)  # Combine results

def time_sorting_algorithm(sort_function, arr):
    """Helper function to time the sorting algorithm."""
    start_time = time.time()
    sort_function(arr)
    end_time = time.time()
    return end_time - start_time

array_size = 1000  # Change this value for larger/smaller arrays
random_array = [random.randint(0, 10000) for _ in range(array_size)]


array_for_bubble_sort = random_array.copy()
array_for_quick_sort = random_array.copy()

# Time Bubble Sort
bubble_sort_time = time_sorting_algorithm(bubble_sort, array_for_bubble_sort)
print(f"Bubble Sort took {bubble_sort_time:.6f} seconds for an array of size {array_size}.")

# Time Quick Sort
quick_sort_time = time_sorting_algorithm(quick_sort, array_for_quick_sort)
print(f"Quick Sort took {quick_sort_time:.6f} seconds for an array of size {array_size}.")
